# name of executable

ELF=$(notdir $(CURDIR)).elf                    

# Tool path

TOOLROOT=/l/arm/arm-none-eabi/bin
PART=TM4C123GH6PM

# Library path

LIBROOT=$(TEMPLATEROOT)/tiva

# Tools

CC=$(TOOLROOT)/arm-none-eabi-gcc
LD=$(TOOLROOT)/arm-none-eabi-ld
AR=$(TOOLROOT)/arm-none-eabi-ar
AS=$(TOOLROOT)/arm-none-eabi-as

# Code Paths

vpath %.c $(TEMPLATEROOT)
vpath %.c $(LIBROOT)/driverlib

LDSCRIPT = $(TEMPLATEROOT)/lm4f.ld 
STARTUP=  startup_lm4f.o 

# Compilation Flags

FULLASSERT = -DUSE_FULL_ASSERT 

CPU=-mcpu=cortex-m4
FPU=-mfpu=fpv4-sp-d16 -mfloat-abi=softfp

AFLAGS+=-mthumb \
       ${CPU}  \
       ${FPU}  \
       -MD

CFLAGS+=-mthumb             \
       ${CPU}              \
       ${FPU}              \
       -ffunction-sections \
       -fdata-sections     \
       -MD                 \
       -std=c99            \
       -Wall               \
       -pedantic           \
       -DPART_${PART} \
       -c  \
       -Dgcc \
       -DTARGET_IS_BLIZZARD_RB1	 \
       -I$(TEMPLATEROOT) -I$(LIBROOT) -I.

LIBGCC:=${shell ${CC} ${CFLAGS} -print-libgcc-file-name}
LIBC:=${shell ${CC} ${CFLAGS} -print-file-name=libc.a}
LIBM:=${shell ${CC} ${CFLAGS} -print-file-name=libm.a}

LDFLAGS+= -T$(LDSCRIPT) -gc-sections -L$(TEMPLATEROOT)/Build 
LDLIBS+= -ldriver '${LIBM}' '${LIBC}' '${LIBGCC}'

# Build executable 

$(ELF) : $(OBJS)
	$(LD) $(LDFLAGS) -o $@ $(OBJS) $(LDLIBS)

# compile and generate dependency info

%.o: %.c
	$(CC) -c $(CFLAGS) $< -o $@
	$(CC) -MM $(CFLAGS) $< > $*.d

%.o: %.s
	$(CC) -c $(CFLAGS) $< -o $@

clean:
	rm -f $(OBJS) $(OBJS:.o=.d) $(ELF) $(STARTUP) $(CLEANOTHER)

debug: $(ELF)
	arm-none-eabi-gdb $(ELF)

# pull in dependencies

-include $(OBJS:.o=.d)




