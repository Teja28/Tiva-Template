# name of executable

ELF=$(notdir $(CURDIR)).elf                    

# Tool path

TOOLROOT=/l/arm/arm-none-eabi/bin

# Library path

LIBROOT=$(TEMPLATEROOT)/tiva

# Tools

CC=$(TOOLROOT)/arm-none-eabi-gcc
LD=$(TOOLROOT)/arm-none-eabi-gcc
AR=$(TOOLROOT)/arm-none-eabi-ar
AS=$(TOOLROOT)/arm-none-eabi-as

# Code Paths

vpath %.c $(TEMPLATEROOT)
vpath %.c $(LIBROOT)/driverlib

#  Processor specific

PTYPE = PART_TM4C123GH6PM
LDSCRIPT = $(TEMPLATEROOT)/lm4f.ld 
STARTUP=  startup_lm4f.o 

# Compilation Flags

FULLASSERT = -DUSE_FULL_ASSERT 

LDFLAGS+= -T$(LDSCRIPT) -gc-sections -L$(TEMPLATEROOT)/Build 
CFLAGS+= -mcpu=cortex-m4 -mthumb -mfpu=fpv4-sp-d16 -mfloat-abi=softfp
CFLAGS+= -ffunction-sections -fdata-sections -MD -std=c99 -Wall
CFLAGS+= -D$(PTYPE) -DTARGET_IS_BLIZZARD_RB1 -Dgcc
CFLAGS+= -I$(TEMPLATEROOT) -I$(LIBROOT) -I.

LDLIBS+= -ldriver

# Build executable 

$(ELF) : $(OBJS)
	$(LD) $(LDFLAGS) -o $@ $(OBJS) $(LDLIBS)

# compile and generate dependency info

%.o: %.c
	$(CC) -c $(CFLAGS) $< -o $@
	$(CC) -MM $(CFLAGS) $< > $*.d

%.o: %.s
	$(CC) -c $(CFLAGS) $< -o $@

clean:
	rm -f $(OBJS) $(OBJS:.o=.d) $(ELF) $(STARTUP) $(CLEANOTHER)

debug: $(ELF)
	arm-none-eabi-gdb $(ELF)

# pull in dependencies

-include $(OBJS:.o=.d)




